library(dplyr)
library(Seurat)
library(patchwork)
library(gridExtra)
library(ggplot2)
library(plyr)
library(SeuratObject)
library(Seurat)
library("harmony")
library(rhdf5)
library("hdf5r")
library("Signac")
library(Seurat)
options(Seurat.object.assay.version = "v5")
library(Signac)
library(EnsDb.Mmusculus.v79)
library(dplyr)
library(ggplot2)
library(loupeR)
library(ggbeeswarm)
library("topGO")
library("GOfuncR")
colour=c('Astrocytes' ='#fde725','OPCs' ='#5ec962','Microglia' ='#21918c','Neurons'='#3b528b','Oligodendrocytes'='#440154')
#####################################################################################
# First, create ATAC and RNA objects for all samples 
# follow https://github.com/datasciencebioinformatics/preprocessing_scRNA_scATAC/blob/main/SeuratFullMultiomeObject
# it will creante two main objects ATAC_objects_combined e RNA_objects_combined
#####################################################################################
output_dir="/home/felipe/results_seurat/"                                           #
#output_dir="/home/singlecell/results_seurat/"                                      #
#####################################################################################
load("./reference.RData")                                                #
#####################################################################################
# Find all markers
reference_join   <- JoinLayers(reference, assay = "RNA")
all.markers <- FindAllMarkers(object = reference_join)
#####################################################################################
# Here I will create the go terms for each cell type.
# get the go terms - select a threshold (number of terms or pvalue)
# also the genes associated to each term (by palue or expression pattern)

# I must select a threshold for the go terms and a 
library(GOfuncR)
library(dplyr)

## load GOfuncR package
library(GOfuncR)
## create input dataframe with candidate genes
gene_ids = all.markers$gene
input_hyper = data.frame(gene_ids, is_candidate=1)
#####################################################################################
## run enrichment analysis (n_randets=100 lowers compuation time
## compared to default 1000)
res_hyper = go_enrich(input_hyper, n_randset=100, organismDb = 'Mus.musculus')
