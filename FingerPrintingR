library(dplyr)
library(Seurat)
library(patchwork)
library(gridExtra)
library(ggplot2)
library(plyr)
library(SeuratObject)
library(Seurat)
library("harmony")
library(rhdf5)
library("hdf5r")
library("Signac")
library(Seurat)
options(Seurat.object.assay.version = "v5")
library(Signac)
library(EnsDb.Mmusculus.v79)
library(dplyr)
library(ggplot2)
library(loupeR)
library(ggbeeswarm)
library("topGO")
library("GOfuncR")
colour=c('Astrocytes' ='#fde725','OPCs' ='#5ec962','Microglia' ='#21918c','Neurons'='#3b528b','Oligodendrocytes'='#440154')
#####################################################################################
# First, create ATAC and RNA objects for all samples 
# follow https://github.com/datasciencebioinformatics/preprocessing_scRNA_scATAC/blob/main/SeuratFullMultiomeObject
# it will creante two main objects ATAC_objects_combined e RNA_objects_combined
#####################################################################################
output_dir="/home/felipe/results_seurat/"                                           #
#output_dir="/home/singlecell/results_seurat/"                                      #
#####################################################################################
load("./reference.RData")                                                #
#####################################################################################
# Find all markers
reference_join   <- JoinLayers(reference, assay = "RNA")
all.markers <- FindAllMarkers(object = reference_join)
#####################################################################################
neurons.markers         <-all.markers[all.markers$cluster=="Neurons",]
oligodendrocytes.markers<-all.markers[all.markers$cluster=="Oligodendrocytes",]
astrocytes.markers      <-all.markers[all.markers$cluster=="Astrocytes",]
oPCs.markers            <-all.markers[all.markers$cluster=="OPCs",]
microglia.markers       <-all.markers[all.markers$cluster=="Microglia",]

neurons.markers         <- neurons.markers[order(neurons.markers$avg_log2FC),][1:10,]
oligodendrocytes.markers<- oligodendrocytes.markers[order(oligodendrocytes.markers$avg_log2FC),][1:10,]
astrocytes.markers      <- astrocytes.markers[order(astrocytes.markers$avg_log2FC),][1:10,]
oPCs.markers            <- oPCs.markers[order(oPCs.markers$avg_log2FC),][1:10,]
microglia.markers       <- microglia.markers[order(microglia.markers$avg_log2FC),][1:10,]
#####################################################################################
# Here I will create the go terms for each cell type.
# get the go terms - select a threshold (number of terms or pvalue)
# also the genes associated to each term (by palue or expression pattern)

# I must select a threshold for the go terms and a 
library(GOfuncR)
library(dplyr)

## load GOfuncR package
library(GOfuncR)
#####################################################################################
## create input dataframe with candidate genes
gene_ids = neurons.markers$gene
input_hyper_neurons   = data.frame(neurons.markers$gene, is_candidate=1)
input_hyper_oligodendrocytes = data.frame(oligodendrocytes.markers$gene, is_candidate=1)
input_hyper_astrocytes= data.frame(astrocytes.markers$gene, is_candidate=1)
input_hyper_microglia = data.frame(microglia.markers$gene, is_candidate=1)
input_hyper_oPCs      = data.frame(oPCs.markers$gene, is_candidate=1)
#####################################################################################
Results_neurons          = go_enrich(input_hyper_neurons, n_randset=1000, organismDb = 'Mus.musculus')$results
Results_oligodendrocytes = go_enrich(input_hyper_oligodendrocytes, n_randset=1000, organismDb = 'Mus.musculus')$results
Results_astrocytes       = go_enrich(input_hyper_astrocytes, n_randset=1000, organismDb = 'Mus.musculus')$results
Results_microglia        = go_enrich(input_hyper_microglia, n_randset=1000, organismDb = 'Mus.musculus')$results
Results_oPCs             = go_enrich(input_hyper_oPCs, n_randset=1000, organismDb = 'Mus.musculus')$results
#####################################################################################
## run enrichment analysis (n_randets=100 lowers compuation time
## compared to default 1000)
## Calculate over and under represented
Over_Representation_neurons   <-Results_neurons[Results_neurons$raw_p_overrep<=0.001,]
Over_Representation_microglia <-Results_neurons[Results_neurons$raw_p_overrep<=0.001,]
Over_Representation_astrocytes<-Results_astrocytes[Results_astrocytes$raw_p_overrep<=0.001,]
Over_Representation_neurons   <-Results_microglia[Results_microglia$raw_p_overrep<=0.001,]
Over_Representation_oPCs      <-Results_oPCs[Results_oPCs$raw_p_overrep<=0.001,]
#####################################################################################
# Now I need to get all genes associated to a go term.
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
                   filters = 'go_id', values = 'GO:0061061', mart = ensembl)
